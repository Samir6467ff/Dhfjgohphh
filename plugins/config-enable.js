const handler = async (m, {conn, usedPrefix, command, args, isOwner, isAdmin, isROwner}) => {
  const optionsFull = `*ุงูุฎูุงุฑ:* โจ | WELCOME
*ุงูุฃูุฑ:* ${usedPrefix + command} welcome
*ุงููุตู:* ุชูุนูู ุฃู ุชุนุทูู ุงูุชุฑุญูุจ ูู ุงููุฌููุนุฉ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ูุถุน ุนุงู
*ุงูุฃูุฑ:* ${usedPrefix + command} public
*ุงููุตู:* ูุฌุนู ุงูุจูุช ูุงุจู ููุงุณุชุฎุฏุงู ุนููููุง ุฃู ุฎุงุตูุง.
*ููุญูุธุฉ:* ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ูุถุน ุงููุณุฎ
*ุงูุฃูุฑ:* ${usedPrefix + command} modohorny
*ุงููุตู:* ุชูุนูู ุฃู ุชุนุทูู ุงูุฃูุงูุฑ ุงูุฎุงุตุฉ ุจุงููุจุงุฑ ูู ุงููุฌููุนุฉ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ANTILINK
*ุงูุฃูุฑ:* ${usedPrefix + command} antilink
*ุงููุตู:* ุชูุนูู ุฃู ุชุนุทูู ููุฒุฉ ููุน ุงูุฑูุงุจุท ูู ูุงุชุณุงุจ.
*ููุญูุธุฉ:* ูุชุนูู ุชูุนูู ุงูููุฏ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ANTILINK 2
*ุงูุฃูุฑ:* ${usedPrefix + command} antilink2
*ุงููุตู:* ุชูุนูู ุฃู ุชุนุทูู ููุฒุฉ ููุน ุงูุฑูุงุจุท ุงูุชู ุชุจุฏุฃ ุจู HTTPS.
*ููุญูุธุฉ:* ูุชุนูู ุชูุนูู ุงูููุฏ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | DETECT
*ุงูุฃูุฑ:* ${usedPrefix + command} detect
*ุงููุตู:* ุชูุนูู ุฃู ุชุนุทูู ุฅุดุนุงุฑุงุช ุงูุชุบููุฑุงุช ูู ุงููุฌููุนุฉ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | DETECT 2
*ุงูุฃูุฑ:* ${usedPrefix + command} detect2
*ุงููุตู:* ููุชุดู ุงูุชุบููุฑุงุช ูู ุงููุฌููุนุฉ ููุญุณู ุฅุฏุงุฑุชูุง.

--------------------------------

*ุงูุฎูุงุฑ:* โ | RESTRICT
*ุงูุฃูุฑ:* ${usedPrefix + command} restrict
*ุงููุตู:* ุชูุนูู ุฃู ุชุนุทูู ูููุฏ ุงูุจูุชุ ูุซู ุฅุฎุฑุงุฌ ุฃู ุฅุถุงูุฉ ุฃุดุฎุงุต ุฅูู ุงููุฌููุนุฉ.
*ููุญูุธุฉ:* ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

--------------------------------

*ุงูุฎูุงุฑ:* โ๏ธ | AUTOREAD
*ุงูุฃูุฑ:* ${usedPrefix + command} autoread
*ุงููุตู:* ูููู ุจุชุญุฏูุฏ ุงูุฑุณุงุฆู ูุงูุญุงูุงุช ูููุฑูุกุฉ ุชููุงุฆููุง.
*ููุญูุธุฉ:* ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | AUDIOS
*ุงูุฃูุฑ:* ${usedPrefix + command} audios
*ุงููุตู:* ุชูุนูู ุฃู ุชุนุทูู ุฃูุงูุฑ ุงูุตูุช ุจุฏูู ุจุงุฏุฆุฉ ูู ุงููุฌููุนุฉ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐พ | AUTOSTICKER
*ุงูุฃูุฑ:* ${usedPrefix + command} autosticker 
*ุงููุตู:* ุชุญููู ุฌููุน ุงูุตูุฑ ุฃู ููุงุทุน ุงูููุฏูู ุงููุฑุณูุฉ ูู ุงููุฌููุนุฉ ุฅูู ููุตูุงุช.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ฌ | PCONLY
*ุงูุฃูุฑ:* ${usedPrefix + command} pconly
*ุงููุตู:* ูููู ุงูุจูุช ุจุงูุฑุฏ ููุท ุนูู ุงูุฃูุงูุฑ ูู ุฏุฑุฏุดุฉ ุฎุงุตุฉ.
*ููุญูุธุฉ:* ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ข | GCONLY
*ุงูุฃูุฑ:* ${usedPrefix + command} gconly
*ุงููุตู:* ูููู ุงูุจูุช ุจุงูุฑุฏ ููุท ุนูู ุงูุฃูุงูุฑ ุฅุฐุง ูุงูุช ูู ูุฌููุนุฉ.
*ููุญูุธุฉ:* ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

--------------------------------

*ุงูุฎูุงุฑ:* โ | ANTIVIEWONCE 
*ุงูุฃูุฑ:* ${usedPrefix + command} antiviewonce
*ุงููุตู:* ูุนูุฏ ุฅุฑุณุงู ุงูุตูุฑ ุงููุฑุณูุฉ ููุนุฑุถ ูุฑุฉ ูุงุญุฏุฉ ุจุดูู ุนุงุฏู ุจูุงุณุทุฉ ุงูุจูุช.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ต | ANTILLAMADAS
*ุงูุฃูุฑ:* ${usedPrefix + command} anticall
*ุงููุตู:* ูููู ุงูุจูุช ุจุญุธุฑ ุงูุฃุดุฎุงุต ุงูุฐูู ูุชุตููู ุจุงูุจูุช.
*ููุญูุธุฉ:* ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ฌ | ANTIPRIVADO
*ุงูุฃูุฑ:* ${usedPrefix + command} antiprivado
*ุงููุตู:* ูููู ุงูุจูุช ุจุญุธุฑ ุงูุฃุดุฎุงุต ุงูุฐูู ููุชุจูู ุฅูู ุงูุจูุช ุจุดูู ุฎุงุต.
*ููุญูุธุฉ:* ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.


--------------------------------

*Opciรณn:* ๐คฌ | ANTITOXIC
ุงูุฃูุฑ: ${usedPrefix + command} antitoxic
ุงููุตู: ููุชุดู ุงููููุงุช ุงููุงุจูุฉ ููุญุฐุฑ ุงููุดุงุฑู ูู ุงููุฌููุนุฉ ูุจู ุฃู ูุชู ุทุฑุฏู.
ููุญูุธุฉ: ูุฌุจ ุชูุนูู ุงูููุฏ.

ุงูุฎูุงุฑ: ๐ธ๏ธ | ANTITRABAS
ุงูุฃูุฑ: ${usedPrefix + command} antitraba
ุงููุตู: ููุชุดู ุงููุตูุต ุงูุทูููุฉ ุงูุชู ูุฏ ุชููู ููุฑูุณุงุช ูุชุณุจุจ ุชุฃุฎูุฑูุง ูู ุงูุฏุฑุฏุดุฉ ููููู ุจุญุฐู ุงููุณุชุฎุฏู.
ููุญูุธุฉ: ูุฌุจ ุชูุนูู ุงูููุฏ.

ุงูุฎูุงุฑ: ๐ | ANTIARABES
ุงูุฃูุฑ: ${usedPrefix + command} antiarabes
ุงููุตู: ุฅุฐุง ุงูุถู ุฑูู ุนุฑุจู ุฅูู ุงููุฌููุนุฉุ ูููู ุงูุจูุช ุจุญุฐูู ุชููุงุฆููุง.
ููุญูุธุฉ: ูุฌุจ ุชูุนูู ุงูุชุฑุญูุจ ูุงูููุฏ.

ุงูุฎูุงุฑ: ๐ | ANTIARABES 2
ุงูุฃูุฑ: ${usedPrefix + command} antiarabes2
ุงููุตู: ุฅุฐุง ูุชุจ ุฑูู ุนุฑุจู ูู ุงููุฌููุนุฉุ ูููู ุงูุจูุช ุจุญุฐูู ุชููุงุฆููุง.
ููุญูุธุฉ: ูุฌุจ ุชูุนูู ุงูููุฏ.

ุงูุฎูุงุฑ: ๐ค | MODEJADIBOT
ุงูุฃูุฑ: ${usedPrefix + command} modejadibot
ุงููุตู: ุชูุนูู ุฃู ุชุนุทูู ุงุณุชุฎุฏุงู ุงูุฃูุฑ ูุฑูุน ุงูุจูุช (${usedPrefix}serbot / ${usedPrefix}jadibot).
ููุญูุธุฉ: ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

ุงูุฎูุงุฑ: ๐ | MODOADMIN
ุงูุฃูุฑ: ${usedPrefix + command} modoadmin
ุงููุตู: ูููู ุงูุจูุช ุจุงูุฑุฏ ููุท ุนูู ุงููุณุคูููู ูู ุงููุฌููุนุฉ.

ุงูุฎูุงุฑ: ๐ | SIMSIMI
ุงูุฃูุฑ: ${usedPrefix + command} simsimi
ุงููุตู: ูุจุฏุฃ ุงูุจูุช ูู ุงูุฑุฏ ุนูู ุงูุฑุณุงุฆู ุจุงุณุชุฎุฏุงู ุฐูุงุก ุตูุงุนู ูู SimSimi.

ุงูุฎูุงุฑ: โณ | ANTISPAM
ุงูุฃูุฑ: ${usedPrefix + command} antispam
ุงููุตู: ููุชุดู ุนูุฏูุง ูููู ูุณุชุฎุฏู ุจุนูู ุณุจุงู ููุฃูุงูุฑ ููุญุธุฑู ููุฏุฉ 5 ุซูุงูู ููุญุฐุฑู.
ููุญูุธุฉ: ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

ุงูุฎูุงุฑ: ๐ก๏ธ | ANTIDELETE
ุงูุฃูุฑ: ${usedPrefix + command} antidelete
ุงููุตู: ููุชุดู ุนูุฏูุง ูููู ูุณุชุฎุฏู ุจุญุฐู ุฑุณุงูุฉ ููุนูุฏ ุฅุฑุณุงููุง.

ุงูุฎูุงุฑ: ๐ | AUDIOS_BOT
ุงูุฃูุฑ: ${usedPrefix + command} audios_bot
ุงููุตู: ูุนุทู ุงูุฃุตูุงุช ุงูุฎุงุตุฉ ุจุงูุจูุช ูู ูุงุฆูุฉ ุงูุฃุตูุงุช ูุฌููุน ุงูุฏุฑุฏุดุงุช ุงูุฎุงุตุฉ.
ููุญูุธุฉ: ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.

ุงูุฎูุงุฑ: ๐ค | MODOIA
ุงูุฃูุฑ: ${usedPrefix + command} modoia
ุงููุตู: ููุนู ูุถุน "ุงูุฐูุงุก ุงูุงุตุทูุงุนู" ูุน GPT ูู ุฌููุน ุงูุฏุฑุฏุดุงุช ุงูุฎุงุตุฉ.
ููุญูุธุฉ: ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ููุท ุจูุงุณุทุฉ ูุงููู ุงูุจูุช.`.trim();
  const isEnable = /true|ุชุดุบูู|(turn)?on|1/i.test(command);
  const chat = global.db.data.chats[m.chat];
  const user = global.db.data.users[m.sender];
  const bot = global.db.data.settings[conn.user.jid] || {};
  const type = (args[0] || '').toLowerCase();
  let isAll = false; const isUser = false;
  switch (type) {
    case 'welcome':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!(isAdmin || isOwner || isROwner)) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.welcome = isEnable;
      break;
    case 'detect':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.detect = isEnable;
      break;
    case 'detect2':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.detect2 = isEnable;
      break;
    case 'simsimi':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.simi = isEnable;
      break;
    case 'antiporno':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiporno = isEnable;
      break;
    case 'delete':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.delete = isEnable;
      break;
    case 'antidelete':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antidelete = isEnable;
      break;
    case 'public':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['self'] = !isEnable;
      break;
    case 'antilink':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiLink = isEnable;
      break;
    case 'antilink2':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiLink2 = isEnable;
      break;
    case 'antiviewonce':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiviewonce = isEnable;
      break;
    case 'modohorny':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.modohorny = isEnable;
      break;
    case 'modoadmin':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.modoadmin = isEnable;
      break;
    case 'autosticker':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.autosticker = isEnable;
      break;
    case 'audios':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.audios = isEnable;
      break;
    case 'restrict':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.restrict = isEnable;
      break;
    case 'audios_bot':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.audios_bot = isEnable;      
      break;
    case 'modoia':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.modoia = isEnable;      
      break;      
    case 'nyimak':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['nyimak'] = isEnable;
      break;
    case 'autoread':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.autoread2 = isEnable;
      //global.opts['autoread'] = isEnable;
      break;
    case 'pconly':
    case 'privateonly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['pconly'] = isEnable;
      break;
    case 'gconly':
    case 'grouponly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['gconly'] = isEnable;
      break;
    case 'swonly':
    case 'statusonly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['swonly'] = isEnable;
      break;
    case 'anticall':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antiCall = isEnable;
      break;
    case 'antiprivado':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antiPrivate = isEnable;
      break;
    case 'modejadibot':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.modejadibot = isEnable;
      break;
    case 'antispam':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antispam = isEnable;
      break;
    case 'antitoxic':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiToxic = isEnable;
      break;
    case 'antitraba':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiTraba = isEnable;
      break;
    case 'antiarabes':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn); 
          throw false;
        }
      }
      chat.antiArab = isEnable;
      break;
    case 'antiarabes2':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiArab2 = isEnable;
      break;
    default:
      if (!/[01]/.test(command)) return await conn.sendMessage(m.chat, {text: optionsFull}, {quoted: m});
      throw false;
  }
  conn.sendMessage(m.chat, {text: `๐๏ธ ุงูุฎูุงุฑ: ${type}\n๐๏ธ ุงูุญุงูุฉ: ${isEnable ? 'ููุนู' : 'ูุนุทู'}\n๐ฃ ู: ${isAll ? 'ููุฐุง ุงูุจูุช' : isUser ? '' : 'ููุฐู ุงููุฌููุนุฉ'}`}, {quoted: m});
};
handler.help = ['en', 'dis'].map((v) => v + 'able <option>');
handler.tags = ['group', 'owner'];
handler.command = /^((ุชุดุบ|ุชุนุท)ูู|(tru|fals)e|(turn)?[01])$/i;
export default handler;
